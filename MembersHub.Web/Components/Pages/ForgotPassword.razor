@page "/forgot-password"
@using System.ComponentModel.DataAnnotations
@using MembersHub.Core.Interfaces
@inject IPasswordResetService PasswordResetService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@rendermode InteractiveServer

<PageTitle>Ξεχάσατε τον Κωδικό - MembersHub</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-8">
    <MudPaper Elevation="4" Class="pa-8">
        <MudStack Spacing="4">
            <div class="text-center">
                <MudIcon Icon="Icons.Material.Filled.LockReset" Size="Size.Large" Color="Color.Primary" />
                <MudText Typo="Typo.h4" Class="mt-2">Ξεχάσατε τον Κωδικό;</MudText>
                <MudText Typo="Typo.body2" Color="Color.Secondary">
                    Εισάγετε το email ή username σας για να λάβετε οδηγίες επαναφοράς
                </MudText>
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Class="mb-4">
                    @errorMessage
                </MudAlert>
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <MudAlert Severity="Severity.Success" Variant="Variant.Filled" Class="mb-4">
                    @successMessage
                </MudAlert>
            }

            @if (!resetRequestSent)
            {
                <EditForm Model="@resetRequestModel" OnValidSubmit="@HandlePasswordResetRequest">
                    <DataAnnotationsValidator />

                    <MudStack Spacing="3">
                        <MudTextField @bind-Value="resetRequestModel.EmailOrUsername"
                                      Label="Email ή Username"
                                      InputType="InputType.Text"
                                      For="@(() => resetRequestModel.EmailOrUsername)"
                                      Immediate="true"
                                      Required="true"
                                      RequiredError="Το email ή username είναι υποχρεωτικό"
                                      Variant="Variant.Outlined" />

                        <ValidationSummary />

                        <MudButton ButtonType="ButtonType.Submit"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   Size="Size.Large"
                                   FullWidth="true"
                                   StartIcon="Icons.Material.Filled.Send"
                                   Disabled="@(isLoading || !IsFormValid())"
                                   Class="mt-4">
                            @if (isLoading)
                            {
                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                                <MudText Class="ms-2">Αποστολή...</MudText>
                            }
                            else
                            {
                                <MudText>Αποστολή Οδηγιών</MudText>
                            }
                        </MudButton>
                    </MudStack>
                </EditForm>
            }
            else
            {
                <MudStack Spacing="4" AlignItems="AlignItems.Center">
                    <MudIcon Icon="Icons.Material.Filled.MarkEmailRead" Size="Size.Large" Color="Color.Success" />
                    <MudText Typo="Typo.h6" Align="Align.Center">Οδηγίες Εστάλησαν!</MudText>
                    <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Secondary">
                        Αν το email ή username που εισάγατε υπάρχει στο σύστημα, θα λάβετε οδηγίες επαναφοράς κωδικού στο email σας.
                    </MudText>
                    <MudText Typo="Typo.caption" Align="Align.Center" Color="Color.Secondary">
                        Ελέγξτε το inbox και το spam folder σας.
                    </MudText>
                </MudStack>
            }

            <MudDivider Class="my-4" />

            <div class="text-center">
                <MudButton Variant="Variant.Text"
                           Color="Color.Primary"
                           StartIcon="Icons.Material.Filled.ArrowBack"
                           OnClick="NavigateToLogin">
                    Επιστροφή στη Σύνδεση
                </MudButton>
            </div>
        </MudStack>
    </MudPaper>
</MudContainer>

@code {
    private ForgotPasswordModel resetRequestModel = new();
    private bool isLoading = false;
    private bool resetRequestSent = false;
    private string? errorMessage;
    private string? successMessage;

    private async Task HandlePasswordResetRequest()
    {
        if (!IsFormValid())
            return;

        isLoading = true;
        errorMessage = null;
        successMessage = null;

        try
        {
            var result = await PasswordResetService.RequestPasswordResetAsync(
                resetRequestModel.EmailOrUsername,
                GetClientIpAddress());

            if (result.Success)
            {
                resetRequestSent = true;
                successMessage = "Οι οδηγίες επαναφοράς κωδικού εστάλησαν επιτυχώς.";
            }
            else
            {
                // Για λόγους ασφαλείας, δεν αποκαλύπτουμε αν το email/username υπάρχει
                resetRequestSent = true;
                successMessage = "Οι οδηγίες επαναφοράς κωδικού εστάλησαν επιτυχώς.";
            }
        }
        catch (Exception)
        {
            errorMessage = "Παρουσιάστηκε σφάλμα. Παρακαλώ δοκιμάστε ξανά.";
        }
        finally
        {
            isLoading = false;
        }
    }

    private bool IsFormValid()
    {
        return !string.IsNullOrWhiteSpace(resetRequestModel.EmailOrUsername);
    }

    private string GetClientIpAddress()
    {
        // In a real application, you would get the actual client IP
        return "localhost";
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    public class ForgotPasswordModel
    {
        [Required(ErrorMessage = "Το email ή username είναι υποχρεωτικό")]
        public string EmailOrUsername { get; set; } = "";
    }
}