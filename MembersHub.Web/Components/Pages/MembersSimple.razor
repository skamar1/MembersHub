@page "/members-simple"
@using MembersHub.Core.Entities
@using MembersHub.Infrastructure.Data
@using MudBlazor
@using Microsoft.EntityFrameworkCore
@inject IServiceScopeFactory ScopeFactory
@inject ISnackbar Snackbar
@rendermode InteractiveServer

<PageTitle>Μέλη - MembersHub</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-4">
        👥 Διαχείριση Μελών
    </MudText>

    <MudPaper Class="pa-4" Elevation="2">
        @if (loading)
        {
            <div class="d-flex justify-center pa-4">
                <MudProgressCircular Indeterminate="true" />
                <MudText Class="ml-3">Φόρτωση δεδομένων...</MudText>
            </div>
        }
        else if (!members.Any())
        {
            <div class="text-center pa-8">
                <MudIcon Icon="Icons.Material.Filled.PersonOff" Size="Size.Large" />
                <MudText Typo="Typo.h6" Class="mt-2">
                    Δεν υπάρχουν μέλη στη βάση δεδομένων
                </MudText>
                <MudText Typo="Typo.body2" Color="Color.Secondary">
                    Προσθέστε μέλη από τη διαχείριση
                </MudText>
            </div>
        }
        else
        {
            <MudText Typo="Typo.h6" Class="mb-3">
                Σύνολο μελών: @members.Count | Ενεργά: @members.Count(m => m.Status == MemberStatus.Active)
            </MudText>
            
            <MudTable Items="@members" Hover="true" Striped="true" Dense="true" Class="thick-borders">
                <HeaderContent>
                    <MudTh>Αριθμός</MudTh>
                    <MudTh>Ονοματεπώνυμο</MudTh>
                    <MudTh>Τηλέφωνο</MudTh>
                    <MudTh>Email</MudTh>
                    <MudTh>Τύπος</MudTh>
                    <MudTh>Κατάσταση</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Αριθμός">@context.MemberNumber</MudTd>
                    <MudTd DataLabel="Όνομα">@context.FullName</MudTd>
                    <MudTd DataLabel="Τηλέφωνο">@context.Phone</MudTd>
                    <MudTd DataLabel="Email">@(context.Email ?? "-")</MudTd>
                    <MudTd DataLabel="Τύπος">@context.MembershipType?.Name</MudTd>
                    <MudTd DataLabel="Κατάσταση">
                        <MudText Color="@GetStatusColor(context.Status)">
                            @GetStatusText(context.Status)
                        </MudText>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
    </MudPaper>
</MudContainer>

@code {
    private List<Member> members = new();
    private bool loading = true;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    
    private async Task LoadData()
    {
        loading = true;
        
        try
        {
            using var scope = ScopeFactory.CreateScope();
            var dbContext = scope.ServiceProvider.GetRequiredService<MembersHubContext>();
            
            members = await dbContext.Members
                .Include(m => m.MembershipType)
                .OrderBy(m => m.MemberNumber)
                .ToListAsync();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Σφάλμα φόρτωσης δεδομένων: {ex.Message}", Severity.Error);
        }
        finally
        {
            loading = false;
        }
    }
    
    private Color GetStatusColor(MemberStatus status) => status switch
    {
        MemberStatus.Active => Color.Success,
        MemberStatus.Inactive => Color.Default,
        MemberStatus.Suspended => Color.Warning,
        _ => Color.Default
    };
    
    private string GetStatusText(MemberStatus status) => status switch
    {
        MemberStatus.Active => "Ενεργό",
        MemberStatus.Inactive => "Ανενεργό",
        MemberStatus.Suspended => "Αναστολή",
        _ => "Άγνωστο"
    };
}